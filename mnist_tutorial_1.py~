# mnist tutorial 1 most basic using tensorflow and softmax regression

import tensorflow as tf

mnist = tf.examples.tutorials.mnist.input_data.read_data_sets("/repos7688/MNIST_data/", one_hot=True)

x = tf.placeholder(tf.float32, [None, 784])
W = tf.Variable(tf.zeros([784, 10]))
b = tf.Variable(tf.zeros([10]))

y = tf.nn.softmax(tf.matmul(x, W) + b)
y_ = tf.placeholder(tf.float32, [None, 10])
cross_entropy = tf.reduce_mean(-tf.reduce_sum(y*tf.log(y_), reduction_indices=[1]))

train_step = tf.train.GradientDescentOptimizer()0.5).minimize(cross_entropy)

sess = tf.InteractiveSession()
tf.global_variables_initializer().run()

# training the model
for _ in range(1000):
    batch_xs, batch_ys = mnist.train.next_batch(100)
    sess.run(train_step, {x: batch_xs, y_: batch_ys})

# evaluating the accuracy of our model
correct_predictions = tf.equal(tf.argmax(y), tf.argmax(y_))

accuracy = tf.reduce_mean(tf.cast(correct_predictions))

print sess.run(accuracy, {x: mnist.test.images, y: mnist.test.labels})

sess.close()
